{
  "title": "Chameleon Settings",
  "subtitle": "Configure your Chameleon extension settings for optimal performance.",
  "provider.title": "AI Provider Configuration",
  "provider.select": "Select AI Provider",
  "provider.selectPlaceholder": "Select a provider",
  "provider.help": "Choose an AI provider to configure.",
  "provider.configTitle": "Provider Configuration",
  "provider.apiUrl": "API URL",
  "provider.apiUrlHelp": "API endpoint for this provider (auto-filled).",
  "provider.apiKey": "API Key",
  "provider.apiKeyPlaceholder": "Enter your API key",
  "provider.apiKeyHelp": "Your API key for this provider.",
  "provider.supportedModels": "Supported Models",
  "provider.modelsHelp": "Models available for this provider will be listed here.",
  "provider.enable": "Enable this provider",
  "provider.save": "Save Provider Settings",
  "model.title": "Model Configuration",
  "model.textModels": "Text Models",
  "model.default": "Default Model",
  "model.defaultPlaceholder": "Select default model",
  "model.defaultHelp": "Used for general conversations and document processing",
  "model.longContext": "Long Context Model",
  "model.longContextPlaceholder": "Select long context model",
  "model.longContextHelp": "Used for documents with >60k tokens",
  "model.reasoning": "Reasoning Model",
  "model.reasoningPlaceholder": "Select reasoning model",
  "model.reasoningHelp": "Used for complex reasoning tasks",
  "model.multimodal": "Multimodal Models",
  "model.image": "Image Model",
  "model.imagePlaceholder": "Select image model",
  "model.imageHelp": "Used for image analysis and generation",
  "model.video": "Video Model",
  "model.videoPlaceholder": "Select video model",
  "model.videoHelp": "Used for video analysis and generation",
  "model.save": "Save Model Configuration",
  "ai.title": "AI Configuration",
  "ai.outputLanguage": "CLI Interface Language",
  "ai.outputLanguageHelp": "Display language for CLI terminal interface",
  "ai.apiTimeout": "API Timeout (seconds)",
  "ai.apiTimeoutHelp": "Maximum time to wait for API responses",
  "ai.enableRouting": "Enable Smart Routing",
  "ai.enableRoutingHelp": "Automatically route requests to the best available model",
  "ai.save": "Save AI Configuration",
  "connection.title": "Connection Testing",
  "connection.testProvider": "Test Provider",
  "connection.testProviderPlaceholder": "Select provider to test",
  "connection.testModel": "Test Model",
  "connection.testModelPlaceholder": "Select model to test",
  "connection.test": "Test Connection",
  "connection.testing": "Testing connection...",
  "connection.success": "Connection successful!",
  "connection.failed": "Connection failed:",
  "connection.noProvider": "Please select a provider first",
  "connection.noModel": "Please select a model first",
  "connection.noApiKey": "Please configure API key for this provider first",
  "save": "Save All Settings",
  "reset": "Reset to Defaults",
  "saved": "Settings saved successfully!",
  "resetConfirm": "Are you sure you want to reset all settings to defaults?",
  "resetSuccess": "Settings have been reset to defaults.",
  "error": "Error saving settings:",
  "loading": "Loading settings...",
  "loaded": "Settings loaded successfully.",
  "gemini.title": "Gemini",
  "gemini.providerConfig": "Gemini AI Provider Configuration",
  "gemini.modelConfig": "Gemini Model Configuration", 
  "gemini.aiConfig": "Gemini AI Configuration",
  "gemini.connectionTest": "Gemini Connection Testing",
  "gemini.globalActions": "Gemini Global Actions",
  "gemini.saveAll": "Save Gemini Settings",
  "gemini.resetAll": "Reset Gemini Settings",
  "gemini.selectDefaultModel": "Select Default Model",
  "gemini.selectTestProvider": "Select Test Provider",
  "settings.saveFailed": "Failed to save settings",
  "settings.resetFailed": "Failed to reset settings",
  "settings.saveGeminiFailed": "Failed to save Gemini settings",
  "settings.resetGeminiFailed": "Failed to reset Gemini settings"
}

